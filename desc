微服务框架的主要功能
    集成注册中心
        服务注册与发现以及取消注册
    不同类型的服务启动与停止
        grpc http 
    管理应用的生命周期
        整个服务的启动与停止





实现步骤
    生命周期控制  
    遗留问题 
        注册超时以及对应的服务停止超时  errorGroup的某一个协程返回了nil,那么 errgroup 的通道有返回值吗  ----》 所以该方式没办法实现生命周期结束后，对应的服务也退出
        这个模式下,只要有个服务启动失败其他的服务(http,grpc)也自动停止 --- > 应该不是 
        需验证

    框架支持服务的实现 http以及grpc 基本实现 监听端口以及运行
    遗漏问题


问题 
    注册中心需要注册那些信息:   k-v 结构  k (服务名) v (ip:port)  ----> 定义对应的结构体
    父context应该在那层:  一般来说在最顶层，但是在第二层比如app这层也没问题

    http以及grpc正常启动需要那些必要参数 --> s.Serve(lis)  




    

使用流程
    用户创建各种服务实例 (http以及grpc)
    用户创建注册中心实例 (consul etcd ...)
    将上述准备实例以参数传入框架,框架内部对服务实例以及注册中心实例启动并进行服务注册
        